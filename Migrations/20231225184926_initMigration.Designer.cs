// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiProject;

#nullable disable

namespace TaxiProject.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231225184926_initMigration")]
    partial class initMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxiProject.models.Driver", b =>
                {
                    b.Property<int>("LicenseNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseNumber"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("No name");

                    b.HasKey("LicenseNumber");

                    b.ToTable("drivers", t =>
                        {
                            t.HasCheckConstraint("LicenseNumber", "LicenseNumber > 0");
                        });

                    b.HasData(
                        new
                        {
                            LicenseNumber = 1,
                            Name = "James Clear"
                        },
                        new
                        {
                            LicenseNumber = 2,
                            Name = "Lucy Monte"
                        },
                        new
                        {
                            LicenseNumber = 3,
                            Name = "Bob Whalley"
                        },
                        new
                        {
                            LicenseNumber = 4,
                            Name = "Jack Rassel"
                        });
                });

            modelBuilder.Entity("TaxiProject.models.Taxi", b =>
                {
                    b.Property<int>("TaxiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxiId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxiId");

                    b.HasIndex("DriverId");

                    b.ToTable("taxis");

                    b.HasData(
                        new
                        {
                            TaxiId = 1,
                            Brand = "Renault",
                            Model = "Logan",
                            RegistrationNumber = "KA2211НР"
                        },
                        new
                        {
                            TaxiId = 2,
                            Brand = "Renault",
                            Model = "Megane",
                            RegistrationNumber = "KA3258СК"
                        },
                        new
                        {
                            TaxiId = 3,
                            Brand = "Chevrolet",
                            Model = "Cruze",
                            RegistrationNumber = "KA0258МН"
                        },
                        new
                        {
                            TaxiId = 4,
                            Brand = "Nissan",
                            Model = "X-trail",
                            RegistrationNumber = "АІ9135НН"
                        });
                });

            modelBuilder.Entity("TaxiProject.models.Taxi", b =>
                {
                    b.HasOne("TaxiProject.models.Driver", "DriverE")
                        .WithMany("Taxis")
                        .HasForeignKey("DriverId");

                    b.Navigation("DriverE");
                });

            modelBuilder.Entity("TaxiProject.models.Driver", b =>
                {
                    b.Navigation("Taxis");
                });
#pragma warning restore 612, 618
        }
    }
}
